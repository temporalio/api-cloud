syntax = "proto3";

package temporal.api.cloud.nexus.v1;

option go_package = "go.temporal.io/api/cloud/nexus/v1;nexus";

import "google/protobuf/timestamp.proto";

message IncomingServiceSpec {
    // The name of the incoming service. Must be unique within an account.
    // The name must match `[a-zA-Z_][a-zA-Z0-9_]*`.
    // This field is mutable.
    string name = 1;

    // The namespace to route requests to. This field is mutable.
    string namespace = 2;

    // The task queue to route requests to. This field is mutable.
    string task_queue = 3;

    // The set of authorization policies for the service. Each request's caller
    // must match with at least one of the specs to be accepted by the incoming service.
    repeated IncomingServiceAuthorizationSpec authorization_specs = 4;
}

message IncomingServiceAuthorizationSpec {
    // The policy set on this incoming service authorization spec.
    // Possible values are: ALLOWED_CLOUD_NAMESPACE
    string policy_type = 1;

    // A policy spec that allows one caller namespace to access the service.
    AllowedCloudNamespacePolicySpec allowed_cloud_namespace_policy_spec = 2;
}

message AllowedCloudNamespacePolicySpec {
    // The namespace that is allowed to call into this service. Calling namespace must be in same account as incoming service.
    string namespace = 1;
}

// A binding to a cloud namespace and task queue for dispatching incoming Nexus requests.
message IncomingService {
    // The id of the incoming service. This is generated by the server and is immutable.
    string id = 1;

    // The current version of the incoming service specification.
    // The next update operation must include this version.
    string resource_version = 2;

    // The incoming service specification.
    IncomingServiceSpec spec = 3;

    // The current state of the service.
    string state = 4;

    // The id of the async operation that is creating/updating/deleting the service, if any.
    string async_operation_id = 5;

    // The date and time when the service was created.
    google.protobuf.Timestamp created_time = 6;

    // The date and time when the service was last modified.
    // Will not be set if the service has never been modified.
    google.protobuf.Timestamp last_modified_time = 7;
}

message OutgoingServiceSpec {
    // The name of the outgoing service. Must be unique within the namespace.
    // The name must match `[a-zA-Z_][a-zA-Z0-9_]*`.
    // This name is immutable.
    string name = 1;

    // The target that the outgoing service will connect to.
    TargetSpec spec = 2;
}

message TargetSpec {
    // The type of target that is set in this spec.
    // Possible values are: CLOUD_INCOMING_SERVICE
    string target_type = 1;
    
    // A target spec for an incoming service within the same account as the outgoing service.
    TargetCloudIncomingServiceSpec target_cloud_incoming_service_spec = 2;
}

message TargetCloudIncomingServiceSpec {
    // The ID of the Incoming Service that the outgoing service will connect to.
    string incoming_service_id = 1;
}

// A per-namespace binding from service name to destination service to invoke Nexus requests
// that are initiated by workflows.
message OutgoingService {
    // The name of the outgoing service.
    string name = 1;

    // The namespace this outgoing service is attached to.
    string namespace = 2;

    // The current version of the incoming service specification.
    // The next update operation must include this version.
    string resource_version = 3;

    // The incoming service specification.
    OutgoingServiceSpec spec = 4;

    // The current state of the service.
    string state = 5;

    // The id of the async operation that is creating/updating/deleting the service, if any.
    string async_operation_id = 6;

    // The date and time when the service was created.
    google.protobuf.Timestamp created_time = 7;

    // The date and time when the service was last modified.
    // Will not be set if the service has never been modified.
    google.protobuf.Timestamp last_modified_time = 8;
}
